(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[147],{KVBR:function(e,n,t){"use strict";t.r(n);var a=t("q1tI"),o=t.n(a),i=t("dEAq"),c=t("H1Ra"),r=o.a.memo((e=>{e.demos;return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"markdown"},o.a.createElement("h1",{id:"cpx"},o.a.createElement(i["AnchorLink"],{to:"#cpx","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"cpx"),o.a.createElement("p",null,"\u6839\u636e\u89c4\u5219\u590d\u5236\u6587\u4ef6\uff0c\u652f\u6301watch\uff08\u5f53\u6587\u4ef6\u5939\u53d1\u751f\u53d8\u5316\uff0c\u540c\u6b65\u590d\u5236\uff09"),o.a.createElement("h2",{id:"\u5b89\u88c5"},o.a.createElement(i["AnchorLink"],{to:"#\u5b89\u88c5","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"\u5b89\u88c5"),o.a.createElement(c["a"],{code:"npm install cpx",lang:"shell"}),o.a.createElement("h2",{id:"\u4f7f\u7528"},o.a.createElement(i["AnchorLink"],{to:"#\u4f7f\u7528","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"\u4f7f\u7528"),o.a.createElement(c["a"],{code:"Usage: cpx <source> <dest> [options]\n\n    Copy files, watching for changes.\n\n        <source>  The glob of target files.\n        <dest>    The path of a destination directory.\n\nOptions:\n\n    -c, --command <command>   A command text to transform each file.\n    -C, --clean               Clean files that matches <source> like pattern in\n                              <dest> directory before the first copying.\n    -L, --dereference         Follow symbolic links when copying from them.\n    -h, --help                Print usage information.\n    --include-empty-dirs      The flag to copy empty directories which is\n                              matched with the glob.\n    --no-initial              The flag to not copy at the initial time of watch.\n                              Use together '--watch' option.\n    -p, --preserve            The flag to copy attributes of files.\n                              This attributes are uid, gid, atime, and mtime.\n    -t, --transform <name>    A module name to transform each file. cpx lookups\n                                the specified name via \"require()\".\n    -u, --update              The flag to not overwrite files on destination if\n                              the source file is older.\n    -v, --verbose             Print copied/removed files.\n    -V, --version             Print the version number.\n    -w, --watch               Watch for files that matches <source>, and copy\n                              the file to <dest> every changing.",lang:"unknown"}),o.a.createElement("h2",{id:"example"},o.a.createElement(i["AnchorLink"],{to:"#example","aria-hidden":"true",tabIndex:-1},o.a.createElement("span",{className:"icon icon-link"})),"Example"),o.a.createElement(c["a"],{code:'cpx "src/**/*.{html,png,jpg}" app --watch',lang:"shell"}),o.a.createElement("p",null,"\u4ece",o.a.createElement("code",null,"src"),"\u6587\u4ef6\u5939\u62f7\u8d1d html/png/jpg \u6587\u4ef6\u5230 app \u76ee\u5f55\u3002\u4fdd\u6301\u6587\u4ef6\u7ed3\u6784\u3002\u5f53\u6587\u4ef6\u6539\u53d8\u65f6\uff0c\u590d\u5236\u4ed6\u4eec\u3002")))}));n["default"]=e=>{var n=o.a.useContext(i["context"]),t=n.demos;return o.a.useEffect((()=>{var n;null!==e&&void 0!==e&&null!==(n=e.location)&&void 0!==n&&n.hash&&i["AnchorLink"].scrollToAnchor(decodeURIComponent(e.location.hash.slice(1)))}),[]),o.a.createElement(r,{demos:t})}}}]);